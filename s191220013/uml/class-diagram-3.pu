@startuml

interface Linable{
    void setPosition()
    Position getPosition()
    int getValue()
}
enum Goblin implements Linable{
    final int r
    final int g
    final int b
    final int rk;
    Position position
    int rank()
    String toString()
    Linable[] toArray()
    void swapPosition()
}
class Position {
    Linable linable 
    void setLinable()
}
class Matrix {
    Position[][] positions
    void put()
    Linable get()
    String toString()
    Linable[] toArray()
}
interface Sorter {
    void load()
    void sort()
    String getPlan()
}
class QuickSorter implements Sorter {
    int[] a
    String plan
    void swap() 
    void quick_sort()
}
class SelectSorter implements Sorter {
    int[] a
    String plan
    void swap() 
}
class Snake{
    Snake theSnake
    Sorter sorter
    String[] parsePlan()
    Snake getTheSnake()
    void setSorter()
    String lineUp()
    void execute()
}


Matrix o-- Position
Goblin  o--  Position
Snake o-- Sorter
Snake --> Matrix: 排列
Linable --o Position 



@enduml